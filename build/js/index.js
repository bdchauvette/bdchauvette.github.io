!function(){"use strict";function t(t,e){return e={exports:{}},t(e,e.exports,i),e.exports}function e(t,n){return"string"==typeof t&&(t=document.querySelectorAll(t)),t.length>1?e.createMany(t,n):(1===t.length&&(t=t[0]),this.element=t,this.active=!1,this.transiting=!1,this.update=this.update.bind(this),this.initCSSPrefix(),this.initAngleGetterSetter(),this.initOptions(n),this.initHardwareAcceleration(),this.initTransition(),this.bindHandlers(),this.addListeners(),void this.update())}function n(t,e,n,i){Object.defineProperty?Object.defineProperty(t,e,{get:n,set:i}):document.__defineGetter__&&(t.__defineGetter__(e,n),t.__defineSetter__(e,i))}var i="undefined"!=typeof window?window:"undefined"!=typeof global?global:this,s={angle:0,speed:0,inertia:0,minimalSpeed:.001,minimalAngleChange:.1,step:0,stepTransitionTime:0,stepTransitionEasing:"linear",rotateParentInstantly:!1,touchElement:null};e.createMany=function(t,n){for(var i=[],s=0;s<t.length;s++)i.push(new e(t[s],n));return i};var o=e.prototype;o.initAngleGetterSetter=function(){n(this,"angle",function(){return this._angle},function(t){this._angle=t,this.virtualAngle=t,this.updateCSS()})},o.bindHandlers=function(){this.onRotationStart=this.onRotationStart.bind(this),this.onRotationStop=this.onRotationStop.bind(this),this.onRotated=this.onRotated.bind(this)},o.addListeners=function(){this.listenersInstalled=!0,"ontouchstart"in document.documentElement?(this.touchElement.addEventListener("touchstart",this.onRotationStart),this.touchElement.addEventListener("touchmove",this.onRotated),this.touchElement.addEventListener("touchend",this.onRotationStop),this.touchElement.addEventListener("touchcancel",this.onRotationStop),this.touchElement.addEventListener("dragstart",this.returnFalse)):(this.touchElement.addEventListener("mousedown",this.onRotationStart),this.touchElement.addEventListener("mousemove",this.onRotated),this.touchElement.addEventListener("mouseup",this.onRotationStop),this.touchElement.addEventListener("mouseleave",this.onRotationStop),this.touchElement.addEventListener("dragstart",this.returnFalse)),this.touchElement.ondragstart=this.returnFalse},o.removeListeners=function(){this.listenersInstalled=!1,"ontouchstart"in document.documentElement?(this.touchElement.removeEventListener("touchstart",this.onRotationStart),this.touchElement.removeEventListener("touchmove",this.onRotated),this.touchElement.removeEventListener("touchend",this.onRotationStop),this.touchElement.removeEventListener("touchcancel",this.onRotationStop),this.touchElement.removeEventListener("dragstart",this.returnFalse)):(this.touchElement.removeEventListener("mousedown",this.onRotationStart),this.touchElement.removeEventListener("mousemove",this.onRotated),this.touchElement.removeEventListener("mouseup",this.onRotationStop),this.touchElement.removeEventListener("mouseleave",this.onRotationStop),this.touchElement.removeEventListener("dragstart",this.returnFalse))},o.bind=function(){this.listenersInstalled!==!0&&this.addListeners()},o.unbind=function(){this.listenersInstalled===!0&&(this.removeListeners(),this.onRotationStop())},o.stop=function(){this.speed=0,this.onRotationStop()},o.onRotationStart=function(t){this.initCoordinates(),this.initDrag(),this.active=!0,void 0!==this.onDragStart&&this.onDragStart(),this.rotateParentInstantly===!1&&t.stopPropagation()},o.onRotationStop=function(){void 0!==this.onDragStop&&this.active===!0&&this.onDragStop(),this.active=!1},o.onRotated=function(t){this.active===!0&&(t.stopPropagation(),t.preventDefault(),void 0!==t.targetTouches&&void 0!==t.targetTouches[0]?this.lastMouseEvent={pageX:t.targetTouches[0].pageX,pageY:t.targetTouches[0].pageY}:this.lastMouseEvent={pageX:t.pageX||t.clientX,pageY:t.pageY||t.clientY})},o.update=function(){void 0!==this.lastMouseEvent&&this.active===!0&&this.updateAngleToMouse(this.lastMouseEvent),this.updateAngle(),this.applySpeed(),this.applyInertia(),Math.abs(this.lastAppliedAngle-this._angle)>=this.minimalAngleChange&&this.transiting===!1&&(this.updateCSS(),this.blockTransition(),void 0!==this.onRotate&&"function"==typeof this.onRotate&&this.onRotate.bind(this)(),this.lastAppliedAngle=this._angle),window.requestAnimationFrame(this.update)},o.updateAngle=function(){this.step>0?this._angle=this.getAngleFromVirtual():this._angle=this.normalizeAngle(this.virtualAngle)},o.getAngleFromVirtual=function(){return Math.ceil(this.virtualAngle/this.step)*this.step},o.normalizeAngle=function(t){var e=t;return e%=360,0>e&&(e=360+e),e},o.differenceBetweenAngles=function(t,e){var n=t*(Math.PI/180),i=e*(Math.PI/180),s=Math.atan2(Math.sin(n-i),Math.cos(n-i)),o=s*(180/Math.PI);return Math.round(100*o)/100},o.applySpeed=function(){this.inertia>0&&0!==this.speed&&this.active===!1&&(this.virtualAngle+=this.speed)},o.applyInertia=function(){this.inertia>0&&(Math.abs(this.speed)>=this.minimalSpeed?(this.speed=this.speed*this.inertia,this.active===!1&&Math.abs(this.speed)<this.minimalSpeed&&void 0!==this.onStop&&this.onStop()):0!==this.speed&&(this.speed=0))},o.updateAngleToMouse=function(t){var e=t.pageX-this.cx,n=t.pageY-this.cy,i=Math.atan2(e,n),o=i*(180/Math.PI*-1)+180;if(void 0===this.lastMouseAngle&&(this.lastElementAngle=this.virtualAngle,this.lastMouseAngle=o),this.stepTransitionTime!==s.stepTransitionTime)this.speed=this.mouseDiff=this.differenceBetweenAngles(o,this.lastMouseAngle),this.virtualAngle=this.lastElementAngle+this.mouseDiff,this.lastElementAngle=this.virtualAngle,this.lastMouseAngle=o;else{var a=this.virtualAngle;this.mouseDiff=o-this.lastMouseAngle,this.virtualAngle=this.lastElementAngle+this.mouseDiff;var r=this.virtualAngle;this.speed=this.differenceBetweenAngles(r,a)}},o.initCoordinates=function(){var t=this.getViewOffset();this.cx=t.x+this.element.offsetWidth/2,this.cy=t.y+this.element.offsetHeight/2},o.initDrag=function(){this.speed=0,this.lastMouseAngle=void 0,this.lastElementAngle=void 0,this.lastMouseEvent=void 0},o.initOptions=function(t){t=t||s,this.touchElement=document.querySelectorAll(t.touchElement)[0]||this.element,this.onRotate=t.onRotate||t.onrotate,this.onStop=t.onStop||t.onstop,this.onDragStop=t.onDragStop||t.ondragstop,this.onDragStart=t.onDragStart||t.ondragstart,this.step=t.step||s.step,this.stepTransitionTime=t.stepTransitionTime||s.stepTransitionTime,this.stepTransitionEasing=t.stepTransitionEasing||s.stepTransitionEasing,this.angle=t.angle||s.angle,this.speed=t.speed||s.speed,this.inertia=t.inertia||s.inertia,this.minimalSpeed=t.minimalSpeed||s.minimalSpeed,this.lastAppliedAngle=this.virtualAngle=this._angle=t.angle||s.angle,this.minimalAngleChange=this.step!==s.step?this.step:s.minimalAngleChange,this.rotateParentInstantly=t.rotateParentInstantly||s.rotateParentInstantly},o.initCSSPrefix=function(){void 0===e.cssPrefix&&("undefined"!=typeof document.body.style.transform?e.cssPrefix="":"undefined"!=typeof document.body.style.mozTransform?e.cssPrefix="-moz-":"undefined"!=typeof document.body.style.webkitTransform?e.cssPrefix="-webkit-":"undefined"!=typeof document.body.style.msTransform&&(e.cssPrefix="-ms-"))},o.initHardwareAcceleration=function(){this.accelerationPostfix="";var t,n=document.createElement("p"),i={webkitTransform:"-webkit-transform",OTransform:"-o-transform",msTransform:"-ms-transform",MozTransform:"-moz-transform",transform:"transform"};document.body.insertBefore(n,null);for(var s in i)void 0!==n.style[s]&&(n.style[s]="translate3d(1px,1px,1px)",t=window.getComputedStyle(n).getPropertyValue(i[s]));document.body.removeChild(n);var o=void 0!==t&&t.length>0&&"none"!==t;o===!0&&(this.accelerationPostfix="translateZ(0)",this.element.style[e.cssPrefix+"transform"]=this.accelerationPostfix,this.updateCSS())},o.initTransition=function(){if(this.stepTransitionTime!==s.stepTransitionTime){var t="all "+this.stepTransitionTime+"ms "+this.stepTransitionEasing;this.element.style[e.cssPrefix+"transition"]=t}},o.updateCSS=function(){this.element.style[e.cssPrefix+"transform"]="rotate("+this._angle+"deg) "+this.accelerationPostfix},o.blockTransition=function(){if(this.stepTransitionTime!==s.stepTransitionTime){var t=this;setTimeout(function(){t.transiting=!1},this.stepTransitionTime),this.transiting=!0}},o.getViewOffset=function(t){var n={x:0,y:0};return e.IEVersion!==!1&&e.IEVersion<9?(n.x=this.element.offsetLeft,n.y=this.element.offsetTop,n):(this.element&&this.addOffset(this.element,n,"defaultView"in document?document.defaultView:document.parentWindow),n)},o.addOffset=function(t,e,n){var i=t.offsetParent;if(e.x+=t.offsetLeft-(i?i.scrollLeft:0),e.y+=t.offsetTop-(i?i.scrollTop:0),i){if(1==i.nodeType){var s=n.getComputedStyle(i,"");if("static"!=s.position){if(e.x+=parseInt(s.borderLeftWidth),e.y+=parseInt(s.borderTopWidth),"table"==i.localName.toLowerCase())e.x+=parseInt(s.paddingLeft),e.y+=parseInt(s.paddingTop);else if("body"==i.localName.toLowerCase()){var o=n.getComputedStyle(t,"");e.x+=parseInt(o.marginLeft),e.y+=parseInt(o.marginTop)}}else"body"==i.localName.toLowerCase()&&(e.x+=parseInt(s.borderLeftWidth),e.y+=parseInt(s.borderTopWidth));for(var a=t.parentNode;i!=a;)e.x-=a.scrollLeft,e.y-=a.scrollTop,a=a.parentNode;this.addOffset(i,e,n)}}else{if("body"==t.localName.toLowerCase()){var o=n.getComputedStyle(t,"");e.x+=parseInt(o.borderLeftWidth),e.y+=parseInt(o.borderTopWidth);var r=n.getComputedStyle(t.parentNode,"");e.x+=parseInt(r.paddingLeft),e.y+=parseInt(r.paddingTop),e.x+=parseInt(r.marginLeft),e.y+=parseInt(r.marginTop)}t.scrollLeft&&(e.x+=t.scrollLeft),t.scrollTop&&(e.y+=t.scrollTop);var h=t.ownerDocument.defaultView;h&&h.frameElement&&this.addOffset(h.frameElement,e,h)}},o.returnFalse=function(){return!1};var a=navigator.userAgent.toLowerCase();e.IEVersion=-1!=a.indexOf("msie")?parseInt(a.split("msie")[1]):!1,e.deg2radians=2*Math.PI/360;var r=t(function(t,e,n){!function(n,i){"function"==typeof define&&define.amd?define(i):"object"==typeof e&&"object"==typeof t?t.exports=i():n.smoothScroll=i()}(i,function(){if("object"==typeof window&&void 0!==document.querySelectorAll&&void 0!==window.pageYOffset&&void 0!==history.pushState){var t=function(t){return"HTML"===t.nodeName?-window.pageYOffset:t.getBoundingClientRect().top+window.pageYOffset},e=function(t){return.5>t?4*t*t*t:(t-1)*(2*t-2)*(2*t-2)+1},n=function(t,n,i,s){return i>s?n:t+(n-t)*e(i/s)},i=function(e,i,s,o){i=i||500,o=o||window;var a=window.pageYOffset;if("number"==typeof e)var r=parseInt(e);else var r=t(e);var h=Date.now(),l=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(t){window.setTimeout(t,15)},d=function(){var t=Date.now()-h;o!==window?o.scrollTop=n(a,r,t,i):window.scroll(0,n(a,r,t,i)),t>i?"function"==typeof s&&s(e):l(d)};d()};return i}})}),h=r&&"object"==typeof r&&"default"in r?r["default"]:r,l=document.querySelector(".logo__background");new e(l,{angle:Math.floor(360*Math.random()),inertia:.95,onDragStart:function(){return document.body.classList.add("js-grabbing")},onDragStop:function(){return document.body.classList.remove("js-grabbing")}});document.addEventListener("click",function(t){var e=t.target;if(e.classList.contains("scroll-arrow")){t.preventDefault();var n=document.querySelector(e.hash);h(n),window.history.replaceState(null,window.title,e.hash)}})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,